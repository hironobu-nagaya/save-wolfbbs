#!/bin/sh

###
#
# save-wolfbbs - 人狼BBSのログをローカルに保存します。
#
# usage:
# ./save-wolfbbs [村番号]...

set -e

WORK_DIR="${WORK_DIR:=.}"
JAR_DIR="${JAR_DIR:=$WORK_DIR/jar}"
XML_DIR="${XML_DIR:=$WORK_DIR/xml}"
WWW_DIR="${WWW_DIR:=$WORK_DIR/www}"
JINARCHIVER="${JINARCHIVER:=jinarchiver-1.504.6.jar}"
JINARCHIVER_URL="${JINARCHIVER_URL:=https://ja.osdn.net/dl/jindolf/$JINARCHIVER}"
JQUERY="${JQUERY:=jquery-3.6.0.min.js}"
JQUERY_URL="${JQUERY_URL:=https://code.jquery.com/$JQUERY}"
IMAGE_URL="http://ninjinix.x0.com/wolff/plugin_wolf/img/"
ECHO="/bin/echo"
THIS="`$ECHO $0 | sed 's%^.*/%%'`"

download() {
  DOWNLOAD_FILE="`$ECHO $1 | sed 's%^.*/%%'`"
  "$ECHO" -n "$THIS: downloading $1 to $2/$DOWNLOAD_FILE..."
  [ -n "`type -pa wget`" ] && {
    wget -rq -O "$2/$DOWNLOAD_FILE" "$1"
  } || {
    curl -sL -o "$2/$DOWNLOAD_FILE" "$1"
  }
  "$ECHO" " OK"
}

xml2html() {
  awk '
BEGIN {
  MESSAGE = ""
  READING_TEXT = 0
  MAIN_COUNT = 0
  PLAYER_COUNT = 0
  PUBLIC_MESSAGE_COUNT = 0
  TIME_REFERENCE_COUNT = 0
  MESSAGE_REFERENCE_COUNT = 0
  TIME_REFERENCE_REGEX = "([01０１]?[0-9０-９][dDｄＤ])?([0-2０-２]?[0-9０-９])[:：]?[0-5０-５][0-9０-９]"
  MESSAGE_REFERENCE_REGEX = "((&gt;)|＞){1,2}[1-9１-９][0-9０-９]*"
  ELEMENT_REGEX = "<[^>]*>"
  FOOTER = "WolfBBS by <a href=\"http://ninjinix.com/\">ninjin</a>"
}

function appendMessage(MESSAGE) {
  return MESSAGE gensub(/(<\/li>|<li\/>)/, "<br>", "g", gensub(/<li>/, "", "g"))
}

function convertDigit(DIGITS) {
  return gensub(/９/, "9", "g", gensub(/８/, "8", "g", gensub(/７/, "7", "g", gensub(/６/, "6", "g", gensub(/５/, "5", "g", gensub(/４/, "4", "g", gensub(/３/, "3", "g", gensub(/２/, "2", "g", gensub(/１/, "1", "g", gensub(/０/, "0", "g", DIGITS))))))))))
}

function cleanupMessage(MESSAGE) {
  return substr(MESSAGE, 0, length(MESSAGE) - 4);
}

function decorateMessage(MESSAGE) {
  return LAND_ID == "wolfg" ? decorateWolfgMessage(cleanupMessage(MESSAGE)) : decorateWolfMessage(cleanupMessage(MESSAGE))
}

function decorateWolfMessage(MESSAGE) {
  REMAIN_MESSAGE = MESSAGE
  MESSAGE = ""
  while (REMAIN_MESSAGE ~ TIME_REFERENCE_REGEX) {
    ELEMENT_START_INDEX = match(REMAIN_MESSAGE, ELEMENT_REGEX)
    ELEMENT_END_INDEX = ELEMENT_START_INDEX + RLENGTH
    INDEX = match(REMAIN_MESSAGE, TIME_REFERENCE_REGEX)
    if (ELEMENT_START_INDEX != 0 && (ELEMENT_END_INDEX < INDEX || (ELEMENT_START_INDEX <= INDEX && INDEX <= ELEMENT_END_INDEX))) {
      MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, ELEMENT_END_INDEX - 1)
      REMAIN_MESSAGE = substr(REMAIN_MESSAGE, ELEMENT_END_INDEX)
      continue
    }
    TIME_REFERENCE_START_INDEX = INDEX
    DAY_CHARACTER_INDEX = match(substr(REMAIN_MESSAGE, INDEX, 3), /[dDｄＤ]/)
    if (DAY_CHARACTER_INDEX) {
      DAY = int(convertDigit(substr(REMAIN_MESSAGE, INDEX, DAY_CHARACTER_INDEX - 1)))
      INDEX += DAY_CHARACTER_INDEX
    } else {
      DAY = MAIN_COUNT - 1
    }
    TIME_CHARACTER_INDEX = match(substr(REMAIN_MESSAGE, INDEX, 3), /[:：]/)
    if (TIME_CHARACTER_INDEX) {
      HOUR = sprintf("%02d", int(convertDigit(substr(REMAIN_MESSAGE, INDEX, TIME_CHARACTER_INDEX - 1))) % 24)
      INDEX += TIME_CHARACTER_INDEX
      MINUTE = convertDigit(substr(REMAIN_MESSAGE, INDEX, 2))
      INDEX += 2
      if (MINUTE !~ /[0-5][0-9]/) {
        MINUTE = sprintf("%02d", int(substr(MINUTE, 0, 1)))
        INDEX -= 1
      }
    } else {
      TIME = convertDigit(substr(REMAIN_MESSAGE, INDEX, 4))
      if (TIME ~ /[0-2][0-9][0-5][0-9]/) {
        HOUR = sprintf("%02d", int(substr(TIME, 0, 2)) % 24)
        MINUTE = substr(TIME, 3, 2)
        INDEX += 4
      } else {
        HOUR = sprintf("%02d", int(substr(TIME, 0, 1)))
        MINUTE = substr(TIME, 2, 2)
        INDEX += 3
      }
    }
    TIME_REFERENCE_LENGTH = INDEX - TIME_REFERENCE_START_INDEX
    MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, TIME_REFERENCE_START_INDEX - 1) "<a id=\"time-reference-" ++TIME_REFERENCE_COUNT "\" class=\"time-" DAY "d" HOUR MINUTE "\">" substr(REMAIN_MESSAGE, TIME_REFERENCE_START_INDEX, TIME_REFERENCE_LENGTH) "</a>"
    REMAIN_MESSAGE = substr(REMAIN_MESSAGE, INDEX)
  }
  return MESSAGE REMAIN_MESSAGE
}

function decorateWolfgMessage(MESSAGE) {
  REMAIN_MESSAGE = MESSAGE
  MESSAGE = ""
  while (REMAIN_MESSAGE ~ TIME_REFERENCE_REGEX) {
    ELEMENT_START_INDEX = match(REMAIN_MESSAGE, ELEMENT_REGEX)
    ELEMENT_END_INDEX = ELEMENT_START_INDEX + RLENGTH
    MESSAGE_REFERENCE_START_INDEX = match(REMAIN_MESSAGE, MESSAGE_REFERENCE_REGEX)
    MESSAGE_REFERENCE_END_INDEX = MESSAGE_REFERENCE_START_INDEX + RLENGTH
    INDEX = match(REMAIN_MESSAGE, TIME_REFERENCE_REGEX)
    if (ELEMENT_START_INDEX != 0 && MESSAGE_REFERENCE_START_INDEX != 0 && (ELEMENT_END_INDEX < INDEX || (ELEMENT_START_INDEX <= INDEX && INDEX <= ELEMENT_END_INDEX)) && (MESSAGE_REFERENCE_END_INDEX < INDEX || (MESSAGE_REFERENCE_START_INDEX <= INDEX && INDEX <= MESSAGE_REFERENCE_END_INDEX))) {
      if (ELEMENT_START_INDEX < MESSAGE_REFERENCE_START_INDEX) {
        MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, MESSAGE_REFERENCE_END_INDEX - 1)
        REMAIN_MESSAGE = substr(REMAIN_MESSAGE, MESSAGE_REFERENCE_END_INDEX)
        continue
      } else {
        MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, ELEMENT_END_INDEX - 1)
        REMAIN_MESSAGE = substr(REMAIN_MESSAGE, ELEMENT_END_INDEX)
        continue
      }
    }
    if (ELEMENT_START_INDEX != 0 && (ELEMENT_END_INDEX < INDEX || (ELEMENT_START_INDEX <= INDEX && INDEX <= ELEMENT_END_INDEX))) {
      MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, ELEMENT_END_INDEX - 1)
      REMAIN_MESSAGE = substr(REMAIN_MESSAGE, ELEMENT_END_INDEX)
      continue
    }
    if (MESSAGE_REFERENCE_START_INDEX != 0 && (MESSAGE_REFERENCE_END_INDEX < INDEX || (MESSAGE_REFERENCE_START_INDEX <= INDEX && INDEX <= MESSAGE_REFERENCE_END_INDEX))) {
      MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, MESSAGE_REFERENCE_END_INDEX - 1)
      REMAIN_MESSAGE = substr(REMAIN_MESSAGE, MESSAGE_REFERENCE_END_INDEX)
      continue
    }
    TIME_REFERENCE_START_INDEX = INDEX
    DAY_CHARACTER_INDEX = match(substr(REMAIN_MESSAGE, INDEX, 3), /[dDｄＤ]/)
    if (DAY_CHARACTER_INDEX) {
      DAY = int(convertDigit(substr(REMAIN_MESSAGE, INDEX, DAY_CHARACTER_INDEX - 1)))
      INDEX += DAY_CHARACTER_INDEX
    } else {
      DAY = MAIN_COUNT - 1
    }
    TIME_CHARACTER_INDEX = match(substr(REMAIN_MESSAGE, INDEX, 3), /[:：]/)
    if (TIME_CHARACTER_INDEX) {
      HOUR = sprintf("%02d", int(convertDigit(substr(REMAIN_MESSAGE, INDEX, TIME_CHARACTER_INDEX - 1))) % 24)
      INDEX += TIME_CHARACTER_INDEX
      MINUTE = convertDigit(substr(REMAIN_MESSAGE, INDEX, 2))
      INDEX += 2
      if (MINUTE !~ /[0-5][0-9]/) {
        MINUTE = sprintf("%02d", int(substr(MINUTE, 0, 1)))
        INDEX -= 1
      }
    } else {
      TIME = convertDigit(substr(REMAIN_MESSAGE, INDEX, 4))
      if (TIME ~ /[0-2][0-9][0-5][0-9]/) {
        HOUR = sprintf("%02d", int(substr(TIME, 0, 2)) % 24)
        MINUTE = substr(TIME, 3, 2)
        INDEX += 4
      } else {
        HOUR = sprintf("%02d", int(substr(TIME, 0, 1)))
        MINUTE = substr(TIME, 2, 2)
        INDEX += 3
      }
    }
    TIME_REFERENCE_LENGTH = INDEX - TIME_REFERENCE_START_INDEX
    MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, TIME_REFERENCE_START_INDEX - 1) "<a id=\"time-reference-" ++REFERENCE_COUNT "\" class=\"time-" DAY "d" HOUR MINUTE "\">" substr(REMAIN_MESSAGE, TIME_REFERENCE_START_INDEX, TIME_REFERENCE_LENGTH) "</a>"
    REMAIN_MESSAGE = substr(REMAIN_MESSAGE, INDEX)
  }

  REMAIN_MESSAGE = MESSAGE REMAIN_MESSAGE
  MESSAGE = ""
  while (REMAIN_MESSAGE ~ MESSAGE_REFERENCE_REGEX) {
    ELEMENT_START_INDEX = match(REMAIN_MESSAGE, ELEMENT_REGEX)
    ELEMENT_END_INDEX = ELEMENT_START_INDEX + RLENGTH
    MESSAGE_REFERENCE_START_INDEX = match(REMAIN_MESSAGE, MESSAGE_REFERENCE_REGEX)
    MESSAGE_REFERENCE_LENGTH = RLENGTH
    MESSAGE_REFERENCE_END_INDEX = MESSAGE_REFERENCE_START_INDEX + MESSAGE_REFERENCE_LENGTH
    if (ELEMENT_START_INDEX != 0 && ELEMENT_START_INDEX <= MESSAGE_REFERENCE_START_INDEX && MESSAGE_REFERENCE_START_INDEX <= ELEMENT_END_INDEX) {
      MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, ELEMENT_END_INDEX - 1)
      REMAIN_MESSAGE = substr(REMAIN_MESSAGE, ELEMENT_END_INDEX)
      continue
    }
    MESSAGE_REFERENCE_NUMBER = convertDigit(gensub(/^((&gt;)|＞){1,2}/, "", 1, substr(REMAIN_MESSAGE, MESSAGE_REFERENCE_START_INDEX, MESSAGE_REFERENCE_LENGTH)))
    MESSAGE = MESSAGE substr(REMAIN_MESSAGE, 0, MESSAGE_REFERENCE_START_INDEX - 1) "<a id=\"message-reference-" ++MESSAGE_REFERENCE_COUNT "\" class=\"message-" MESSAGE_REFERENCE_NUMBER "\">" substr(REMAIN_MESSAGE, MESSAGE_REFERENCE_START_INDEX, MESSAGE_REFERENCE_LENGTH) "</a>"
    REMAIN_MESSAGE = substr(REMAIN_MESSAGE, MESSAGE_REFERENCE_END_INDEX)
  }
  return MESSAGE REMAIN_MESSAGE
}

function hasValue(KEY) {
  return $0 ~ KEY "=\".*\""
}

function getValue(KEY) {
  INDEX = match($0, KEY "=\".*\"")
  return substr($0, INDEX + length(KEY) + 2, index(substr($0, INDEX + length(KEY) + 3), "\""))
}

/^<village$/,/^>$/ {
  if (!/^>$/) {
    if (hasValue("fullName")) {
      VILLAGE_FULL_NAME = getValue("fullName")
    }
    if (hasValue("formalName")) {
      FORMAL_NAME = getValue("formalName")
    }
    if (hasValue("graveIconURI")) {
      GRAVE_ICON_URI = "plugin_wolf/img/" gensub(/.*\//, "", 1, getValue("graveIconURI"))
    }
    if (hasValue("landId")) {
      LAND_ID = getValue("landId")
    }
  } else {
    print "<html><head><title>" FORMAL_NAME " " VILLAGE_FULL_NAME "</title><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"><link rel=\"stylesheet\" type=\"text/css\" href=\"plugin_wolf/css/wolfbbs.css\"><script src=\"plugin_wolf/js/jquery.js\"></script><script src=\"plugin_wolf/js/wolfbbs.js\"/></script></head><body>"
  }
}

/^<avatar/,/^\/>$/ {
  if (!/^\/>$/) {
    if (hasValue("avatarId")) {
      AVATAR_ID = getValue("avatarId")
    }
    if (hasValue("fullName")) {
      FULL_NAME = getValue("fullName")
    }
    if (hasValue("shortName")) {
      SHORT_NAME = getValue("shortName")
    }
    if (hasValue("faceIconURI")) {
      FACE_ICON_URI = "plugin_wolf/img/" gensub(/.*\//, "", 1, getValue("faceIconURI"))
    }
  } else {
    AVATARS[AVATAR_ID, 1] = FULL_NAME
    AVATARS[AVATAR_ID, 2] = SHORT_NAME
    AVATARS[AVATAR_ID, 3] = FACE_ICON_URI
  }
}

/^<period/,/^>$/ {
  if (!/^>$/) {
    if (hasValue("type")) {
      TYPE = getValue("type")
    }
    if (hasValue("day")) {
      DAY = getValue("day")
    }
    if (hasValue("nextCommitDay")) {
      split(substr(getValue("nextCommitDay"), 3, 7), NEXT_COMMIT_DAY, /-/)
    }
    if (hasValue("commitTime")) {
      COMMIT_TIME = substr(getValue("commitTime"), 0, 5)
    }
  } else {
    MAIN_COUNT++
    if (DAY == 0) {
      print "<header><figure><img class=\"title\" src=\"./plugin_wolf/img/title.jpg\"/></figure><p>" VILLAGE_FULL_NAME "<strong>（" int(NEXT_COMMIT_DAY[1]) "/" int(NEXT_COMMIT_DAY[2]) " " COMMIT_TIME  " に更新）</strong></header><nav><p id=\"select-day\"></p><span id=\"select-mode\">mode :<a id=\"select-public\">人</a><a id=\"select-wolf\">狼</a><a id=\"select-grave\">墓</a><a id=\"select-all\" class=\"selected\">全</a></span></nav>"
    }
    print "<main id=\"day-" DAY "\" class=\"" TYPE "\"" (DAY == 0 ? "" : " style=\"display:none;\"") ">"
  }
}

/^<startEntry>$/,/^<\/startEntry>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/startEntry>)$/) {
    next
  }
  if (!/^<\/startEntry>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<startMirror>$/,/^<\/startMirror>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/startMirror>)$/) {
    next
  }
  if (!/^<\/startMirror>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<startAssault>$/,/^<\/startAssault>$/ {
  if (!/$(<li>.*<\/li>|<li\/>|<\/startAssault>$)/) {
    next
  }
  if (!/^<\/startAssault>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<openRole>$/,/^<\/openRole>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/openRole>)$/) {
    next
  }
  if (!/^<\/openRole>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<openEntry>$/,/^<\/openEntry>$/ {
  if (!/(<li>.*<\/li>|<li\/>|^<\/openEntry>$)/) {
    next
  }
  if (!/^<\/openEntry>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<onStage/,/^<\/onStage>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/onStage>)$/) {
    next
  }
  if (!/^<\/onStage>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<judge/,/^<\/judge>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/judge>)$/) {
    next
  }
  if (!/^<\/judge>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article class=\"private\"><section class=\"extra\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<counting /,/^<\/counting>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/counting>)$/) {
    next
  }
  if (!/^<\/counting>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<counting2>$/,/^<\/counting2>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/counting2>)$/) {
    next
  }
  if (!/^<\/counting2>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article class=\"private\"><section class=\"extra\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<execution/,/^<\/execution>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/execution>)$/) {
    next
  }
  if (!/^<\/execution>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<guard/,/^<\/guard>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/guard>)$/) {
    next
  }
  if (!/^<\/guard>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article class=\"private\"><section class=\"extra\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<murdered/,/^<\/murdered>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/murdered>$)/) {
    next
  }
  if (!/^<\/murdered>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<noMurder>$/,/^<\/noMurder>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/noMurder>)$/) {
    next
  }
  if (!/^<\/onMurder>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<survivor>$/,/^<\/survivor>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/survivor>)$/) {
    next
  }
  if (!/^<\/survivor>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<vanish/,/^<\/vanish>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/vanish>)$/) {
    next
  }
  if (!/^<\/vanish>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<suddenDeath/,/^<\/suddenDeath>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/suddenDeath>)$/) {
    next
  }
  if (!/^<\/suddenDeath>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<winVillage>$/,/^<\/winVillage>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/winVillage>)$/) {
    next
  }
  if (!/^<\/winVillage>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<winWolf>$/,/^<\/winWolf>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<\/winWolf>)$/) {
    next
  }
  if (!/^<\/winWolf>$/) {
    MESSAGE = appendMessage(MESSAGE)
  } else {
    print "<article><section class=\"announce\">" cleanupMessage(MESSAGE) "</section></article>"
    MESSAGE = ""
  }
}

/^<playerList>$/,/^<\/playerList>$/ {
  if (!/^(<li>.*<\/li>|<li\/>|<playerInfo.*\/>|<\/playerList>)$/) {
    next
  }
  if (!/^<\/playerList>$/) {
    if (/^<playerInfo.*\/>$/) {
      if (!/uri=".*"/) {
        next
      }
      if (hasValue("playerId")) {
        PLAYER_ID = getValue("playerId")
      }
      if (hasValue("uri")) {
        URI = getValue("uri")
      }

      for (I = 1; I <= length(PLAYERS); I++) {
        PLAYER_ID_START_INDEX = match(PLAYERS[I], "（.*）") + 1
        PLAYER_ID_LENGTH = RLENGTH - 2
        PLAYER_ID_END_INDEX = PLAYER_ID_START_INDEX + PLAYER_ID_LENGTH
        if (PLAYER_ID == substr(PLAYERS[I], PLAYER_ID_START_INDEX, PLAYER_ID_LENGTH)) {
          PLAYERS[I] = substr(PLAYERS[I], 0, PLAYER_ID_START_INDEX - 1) "<a class=\"player-url\" href=\"" URI "\">" substr(PLAYERS[I], PLAYER_ID_START_INDEX, PLAYER_ID_LENGTH) "</a>" substr(PLAYERS[I], PLAYER_ID_END_INDEX)
          break
        }
      }
    } else {
      PLAYERS[++PLAYER_COUNT] = appendMessage()
    }
  } else {
    print "<article><section class=\"announce\"><span>"
    for (I = 1; I <= length(PLAYERS); I++) {
      print PLAYERS[I]
    }
    print "</span></section></article>"
  }
}

/^<assault/,/^<\/assault>$/ {
  if(!READING_TEXT) {
    if (hasValue("byWhom")) {
      BY_WHOM = getValue("byWhom")
    }
    if (hasValue("time")) {
      TIME = substr(getValue("time"), 0, 5)
    }
    if (/^ *>$/) {
      READING_TEXT = 1
      next
    }
  } else {
    if (!/^<\/assault>$/) {
      if (!/^(<li>.*<\/li>$|<li\/>)$/) {
        next
      }
      MESSAGE = appendMessage(MESSAGE)
    } else {
      print "<article class=\"wolf\"><header>" AVATARS[BY_WHOM, 1] "<span class=\"time\">" TIME "</span></header><section><figure><img src=\"./" AVATARS[BY_WHOM, 3] "\"/></figure><section class=\"wolf\">" cleanupMessage(MESSAGE) "</section></article>"
      MESSAGE = ""
      READING_TEXT = 0
    }
  }
}

/^<talk/,/^<\/talk>$/ {
  if(!READING_TEXT) {
    if (hasValue("type")) {
      TYPE = getValue("type")
    }
    if (hasValue("avatarId")) {
      AVATAR_ID = getValue("avatarId")
    }
    if (hasValue("xname")) {
      XNAME = getValue("xname")
    }
    if (hasValue("time")) {
      TIME = substr(getValue("time"), 0, 5)
    }
    if (/^>$/) {
      READING_TEXT = 1
      next
    }
  } else {
    if (!/^<\/talk>$/) {
      if (!/^(<li>.*<\/li>|<li\/>)$/) {
        next
      }
      MESSAGE = appendMessage(MESSAGE)
    } else {
      HANDLE_PUBLIC_MESSAGE_COUNT = LAND_ID == "wolfg" && TYPE == "public"
      if (HANDLE_PUBLIC_MESSAGE_COUNT) {
        PUBLIC_MESSAGE_COUNT++
      }
      print "<article id=\"" XNAME "\" class=\"" (TYPE != "public" ? TYPE " " : "") "time-" (MAIN_COUNT - 1) "d" gensub(/:/, "", 1, TIME) (HANDLE_PUBLIC_MESSAGE_COUNT ? " message-" PUBLIC_MESSAGE_COUNT : "") "\"><header>" (HANDLE_PUBLIC_MESSAGE_COUNT ? "<span class=\"message-number\">" PUBLIC_MESSAGE_COUNT ".</span>" : "") AVATARS[AVATAR_ID,1] "<span class=\"time\">" TIME "</span></header><section><figure><img src=\"./" (TYPE == "grave" ? GRAVE_ICON_URI : AVATARS[AVATAR_ID,3]) "\"/></figure><section class=\"" TYPE "\">" decorateMessage(MESSAGE) "</section></article>"
      MESSAGE = ""
      READING_TEXT = 0
    }
  }
}

/^<\/period>$/ {
  print "<a>次の日へ</a></main>"
}

/^<\/village>$/ {
    print "<main id=\"day-" MAIN_COUNT "\" class=\"order\" style=\"display:none;\"><article><section class=\"order\">終了しました。</section></article></main><footer>" FOOTER "</footer></body></html>"
}
' "$@"
}

[ -d "$WORK_DIR" ] || mkdir -pv "$WORK_DIR"
[ -d "$JAR_DIR" ] || mkdir -pv "$JAR_DIR"
[ -d "$XML_DIR" ] || mkdir -pv "$XML_DIR"
[ -d "$WWW_DIR" ] || mkdir -pv "$WWW_DIR"
for DIR in css img js
do
  [ -d "$WWW_DIR/plugin_wolf/$DIR" ] || mkdir -pv "$WWW_DIR/plugin_wolf/$DIR"
done

EXIT_STATUS=0
for COMMAND in java
do
  [ -n "`type -pa $COMMAND`" ] || {
    EXIT_STATUS=1
    "$ECHO" "$THIS: $COMMAND: command not found" >&2
  }
done

[ -n "`type -pa wget`" -o -n "`type -pa curl`" ] || {
    EXIT_STATUS=1
    "$ECHO" "$THIS: wget: command not found" >&2
    "$ECHO" "$THIS: curl: command not found" >&2
}

[ "$EXIT_STATUS" -eq 0 ] || exit "$EXIT_STATUS"

[ -f "$WWW_DIR/plugin_wolf/css/wolfbbs.css" ] || cat > "$WWW_DIR/plugin_wolf/css/wolfbbs.css" << 'EOF'
* {
  line-height: 130%;
  font-size: 100%;
}

html {
  position: relative;
  background: #765;
  color: #DDDDDD;
  overflow-wrap: anywhere;
  word-break: break-all;
}

body {
  margin: auto;
  width: 80%;
  padding-bottom: 0.5px;
  min-width: 500px;
  height: min-content;
  background: #000000;
}

body > nav, body > main {
  margin: 8px 16px 0 16px;
}

body > footer {
  margin: 8px 16px 8px 16px;
  text-align: right;
}

p {
  text-indent: 1em;
  margin-top: 12px;
  margin-bottom: 16px;
}

strong {
  font-weight: normal;
  color: #FF4444;
}

figure {
  margin: 0;
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
}

img.title {
  width:100%;
}


div[id^="time-referenced-"], div[id^="message-referenced-"] {
  margin-left: 3em;
  filter: grayscale(25%);
}

article {
  width: 100%;
  margin: 8px 0 16px 0;
}

section.public, section.private, section.wolf, section.grave {
  flex: auto;
  display: inline-block;
  position: relative;
  margin: 5px 0px 5px 15px;
  padding: 8px 12px 8px 12px;
  border-radius: 8px;
  width: 100%;
}

section.public {
  background: #ffffff;
  color: #000000;
}

section.private {
  background: #939393;
  color: #000000;
}

section.wolf {
  background: #FF7777;
  color: #000000;
}

section.grave {
  background: #9FB7CF;
  color: #000000;
}

section.public:after {
  content: "";
  display: inline-block;
  position: absolute;
  bottom: 43%;
  left: -8px;
  border-top: 8px solid transparent;
  border-right: 8px solid #FFFFFF;
}

section.public:after {
  border-right: 8px solid #FFFFFF;
}

section.private:before, section.grave:before, section.wolf:before {
  content: "";
  position: absolute;
  left: -13px;
  width: 4px;
  height: 4px;
  bottom: 42%;
  border-radius: 50%;
}

section.private:after,section.grave:after, section.wolf:after {
  content: "";
  position: absolute;
  left: -8px;
  width: 7px;
  height: 7px;
  bottom: 43%;
  border-radius: 50%;
}

section.private:before, section.private:after {
  background: #939393;
}

section.grave:before, section.grave:after {
  background: #9FB7CF;
}

section.wolf:before, section.wolf:after {
  background: #ff7777;
}

article section {
  display: flex;
  flex-direction: row;
  align-items: center;
}

section.announce, section.order {
  padding: 8px 12px 8px 12px;
}

section.announce {
  border: 1px solid #DDDDDD;
}

section.order {
  border: 1px solid #FF4444;
  color: #FF4444;
}

section.extra {
  border: 1px solid #888888;
  padding: 8px;
  color: #888888;
}

section > figure {
  max-width: 40px;
}

span.message-number {
  display: inline-block;
  margin-right: 0.5em;
  color: #666666;
}

span.time {
  display: inline-block;
  text-indent: 0.25em;
  color: #888888;
}

section.public > a {
  color: #FF0000;
}

section.private > a {
  color: #FFFFFF;
}

section.wolf > a {
  color: #FFFFFF;
}

section.grave > a {
  color: #0000FF;
}

a {
  margin: 0 0.125em 0 0.125em;
  color: #FF8800;
  text-decoration: underline;
  cursor: pointer;
}

a.player-url {
  margin: 0;
}

a.selected {
  color: #888888;
  text-decoration: none;
}

a:hover {
  color: #FFFFFF;
}

a.selected:hover {
  color: #888888;
}
EOF

[ -f "$WWW_DIR/plugin_wolf/js/wolfbbs.js" ] || cat > "$WWW_DIR/plugin_wolf/js/wolfbbs.js" << 'EOF'
'use strict';

$(document).ready(function() {
  history.pushState(null, null, null);
  var $mains = $('html > body > main');
  var $selectDay = $('#select-day');
  $mains.each(function() {
    var name;
    var $main = $(this);
    if ($main.hasClass('prologue')) {
      name = "プロローグ";
    } else if ($main.hasClass('epilogue')) {
      name = "エピローグ";
    } else if ($main.hasClass('order')) {
      name = "終了"
    } else {
      name = $main.attr('id').substring(4) + "日目";
    }
    $selectDay.append($('<a id="select-' + $main.attr('id') + '"' + ($main.attr('id') == 'day-0' ? ' class="selected"' : '') + '>' + name + '</a>'));
  });

  var $selectMode = $('#select-mode');
  var $selectDays = $('#select-day > a');
  $selectDays.click(function() {
    var $thisSelectDay = $(this);
    if ($thisSelectDay.hasClass('selected')) {
      return;
    }
    var day = $thisSelectDay.attr('id').substring(11);
    if ($('#day-' + day).hasClass('order')) {
      $selectMode.hide();
    } else {
      $selectMode.show();
    }
    $selectDays.removeClass('selected');
    $thisSelectDay.addClass('selected');
    $mains.hide();
    $('#day-' + day).show();
    pushState();
    window.scrollTo(0, 0);
  });

  var $nextDays = $('html > body > main > a');
  $nextDays.click(function() {
    $('#select-day-' + (parseInt($(this).parent().attr('id').substring(4), 10) + 1)).trigger('click');
  });

  var $selectModes = $('#select-mode > a');
  $selectModes.click(function() {
    var $thisSelectMode = $(this);
    if ($thisSelectMode.hasClass('selected')) {
      return;
    }
    $selectModes.removeClass('selected');
    $thisSelectMode.addClass('selected');
    pushState();
  });

  var $allArticles = $("html > body > main article");
  var $privateArticles = $allArticles.filter('article.private');
  var $wolfArticles = $allArticles.filter('article.wolf');
  var $graveArticles = $allArticles.filter('article.grave');

  $('#select-public').click(function() {
    $privateArticles.hide();
    $wolfArticles.hide();
    $graveArticles.hide();
  });

  $('#select-wolf').click(function() {
    $privateArticles.hide();
    $graveArticles.hide();
    $wolfArticles.show();
  });

  $('#select-grave').click(function() {
    $privateArticles.hide();
    $wolfArticles.hide();
    $graveArticles.show();
  });

  $('#select-all').click(function() {
    $privateArticles.show();
    $wolfArticles.show();
    $graveArticles.show();
  });

  toggleArticles(getParam('mode'));
  var day = getParam('day');
  if (!day) {
    day = 0;
  }
  var $selectDayByParam = $('#select-day-' + day);
  if ($selectDayByParam.length === 0) {
    $selectDayByParam = $('#select-day-' + $('main.order').attr('id').substring(4));
  }
  $selectDayByParam.trigger('click');

  window.addEventListener('popstate', function(e) {
    var day = getParam('day');
    if (!day) {
      day = 0;
    }
    var $main = $('#day-' + day);
    if ($main.length === 0) {
      $main = $('main.order');
      day = $main.attr('id').substring(4);
    }
    $mains.hide();
    $main.show();
    if ($main.hasClass('order')) {
      $selectMode.hide();
    } else {
      $selectMode.show();
    }
    $selectDays.removeClass('selected');
    $('#select-day-' + day).addClass('selected');

    var mode = getParam('mode');
    if (mode !== 'public' && mode !== 'private' && mode !== 'grave') {
      mode = 'all';
    }
    $selectModes.removeClass('selected');
    $('#select-' + mode).addClass('selected');
    toggleArticles(mode);
　});

  $('a[id^="time-reference-"]').hover(function() {
    var $thisAnchor = $(this);
    var timeReferenceNumber = $thisAnchor.attr('id').substring(15)
    var $referenced = $('#time-referenced-' + timeReferenceNumber);
    if ($referenced.length > 0) {
      $referenced.fadeIn();
      return;
    }
    var thisAnchorClass = $thisAnchor.attr('class');
    var day = thisAnchorClass.substring(5, thisAnchorClass.indexOf('d'));
    $referenced = $('<div id="time-referenced-' + timeReferenceNumber + '"></div>');
    $referenced.append($('main#day-' + day + ' > article.' + thisAnchorClass).clone()).find('*').attr('id', null);
    $thisAnchor.parents('article').after($referenced);
  }, function() {
    $('#time-referenced-' + $(this).attr('id').substring(15)).fadeOut();
  });

  $('a[id^="message-reference-"]').hover(function() {
    var $thisAnchor = $(this);
    var messageReferenceNumber = $thisAnchor.attr('id').substring(18)
    var $referenced = $('#message-referenced-' + messageReferenceNumber);
    if ($referenced.length > 0) {
      $referenced.fadeIn();
      return;
    }
    $referenced = $('<div id="message-referenced-' + messageReferenceNumber + '"></div>');
    $referenced.append($('main > article.' + $thisAnchor.attr('class')).clone()).find('*').attr('id', null);
    $thisAnchor.parents('article').after($referenced);
  }, function() {
    $('#message-referenced-' + $(this).attr('id').substring(18)).fadeOut();
  });

  function toggleArticles(mode) {
    switch(mode) {
      case 'public':
        $privateArticles.hide();
        $wolfArticles.hide();
        $graveArticles.hide();
        break;
      case 'wolf':
        $privateArticles.hide();
        $graveArticles.hide();
        $wolfArticles.show();
        break;
      case 'grave':
        $privateArticles.hide();
        $wolfArticles.hide();
        $graveArticles.show();
        break;
      default:
        $privateArticles.show();
        $wolfArticles.show();
        $graveArticles.show();
        break;
    }
  }

  function pushState() {
    history.pushState(null, null, '?day=' + $('#select-day > a.selected').attr('id').substring(11) + '&mode=' + $('#select-mode > a.selected').attr('id').substring(7));
  }

  function getParam(name) {
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(window.location.href);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  }
});
EOF

[ -f "$WWW_DIR/plugin_wolf/js/$JQUERY" ] || {
  download "$JQUERY_URL" "$WWW_DIR/plugin_wolf/js" &&
  ln -sfv "$JQUERY" "$WWW_DIR/plugin_wolf/js/jquery.js"
}

[ -f "$JAR_DIR/$JINARCHIVER" ] || download "$JINARCHIVER_URL" "$JAR_DIR"
for IMAGE in `seq -f '%02g' 1 20 | awk '{print "face" $0 ".jpg"}'` face99.jpg title.jpg
do
  [ -f "$WWW_DIR/plugin_wolf/img/$IMAGE" ] || download "$IMAGE_URL/$IMAGE" "$WWW_DIR/plugin_wolf/img"
done

[ "$#" -gt 0 ] || {
  {
    "$ECHO"
    "$ECHO" "usage:"
    "$ECHO" "$THIS [村番号]..."
    "$ECHO"
    "$ECHO" "example:"
    "$ECHO" "$THIS F2181"
    "$ECHO" "$THIS F2209 F2223"
    "$ECHO"
  } >&2
  exit 0
}

for ARG in "$@"
do
  "$ECHO" "$ARG" | grep -Eiq "^[0abcdefg]?[0-9]+" || {
    "$ECHO" "$THIS: $ARG: invalid value. ignore." >&2
    continue
  }
  "$ECHO" "$ARG" | grep -iq "^[0abcdefg]" && {
    LAND="wolf`$ECHO $ARG | cut -c 1 | tr A-Z a-z`"
    VID="`$ECHO $ARG | cut -c 2-`"
  } || {
    LAND="wolf"
    VID="$ARG"
  }
  ZERO_UNPADDED_VID="`$ECHO $VID | sed 's/^0*//'`"
  XML="jin_${LAND}_`printf '%05d' $ZERO_UNPADDED_VID`.xml"
  [ -f "$XML_DIR/$XML" ] || {
    "$ECHO" -n "$THIS: downloading and parsing $ARG to $XML_DIR/$XML..."
    java -jar "$JAR_DIR/$JINARCHIVER" -land "$LAND" -vid "$VID" -outdir "$XML_DIR"
    "$ECHO" " OK"
  }
  HTML="$ARG.html"
  [ -f "$WWW_DIR/$HTML" ] || {
    "$ECHO" -n "$THIS: converting $XML_DIR/$XML to $WWW_DIR/$HTML..."
    xml2html "$XML_DIR/$XML" > "$WWW_DIR/$HTML"
    (rm -f "$WWW_DIR/$HTML" && tr -d '\n' > "$WWW_DIR/$HTML") < "$WWW_DIR/$HTML"
    "$ECHO" " OK"
  }
done

